{"version":3,"sources":["spin.min.js","pageController.js","page.js"],"names":["a","b","module","exports","define","amd","Spinner","this","c","d","document","createElement","arguments","length","appendChild","e","join","f","g","Math","max","h","j","substring","indexOf","toLowerCase","i","m","k","insertRule","cssRules","style","charAt","toUpperCase","slice","l","opts","defaults","n","lines","width","radius","scale","corners","color","opacity","rotate","direction","speed","trail","fps","zIndex","className","top","left","shadow","hwaccel","position","prototype","spin","stop","el","insertBefore","firstChild","setAttribute","o","timeout","setTimeout","clearTimeout","parentNode","removeChild","height","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","type","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","pageControllerModule","$","pageController","editHandler","data","username","JSON","parse","sessionStorage","getItem","authToken","access_token","querySelector","attr","hasAttribute","xpath","CKEDITOR","config","inlinesave","postUrl","DEV_CONFIG","postAuth","postData","useJson","onSave","editor","destroy","removeAttribute","onSuccess","console","log","onFailure","status","request","useJSON","useColorIcon","on","ev","extraHeaders","Authorization","inline","bodyId","extraPlugins","filebrowserImageUploadUrl","allowedContent","toolbarGroups","name","groups","removeButtons","editAddHandler","loginKeyBind","map","onkeydown","onkeyup","event","keyCode","css","fadeIn","fadeOut","skipElements","recurseAdd","element","nodeType","Node","TEXT_NODE","nodeValue","trim","nodeName","parents","completePath","pageModule","getCompletePath","onclick","preventDefault","recurseRemove","classList","remove","removeData","instances","addEditClass","body","removeEditClass","appendLogin","LoginTemplate","prepend","toggleClass","loginAuthenticate","appendControlPanel","rev_auth","UserControlPanel","off","logoutRequest","then","unbind","clear","find","val","password","origin","window","location","host","auth_data","post","stringify","error","done","response","xhr","response_data","setItem","refresh_token","revenantContentCheck","init","ajax","url","headers","jQuery","DEV_CONFIGS","LOCAL","PROD","page","getText","textContent","getElementByXpath","path","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","getXPath","id","children","tagName","index","hostname","pathname","title","oldText","parentElement","innerHTML","createRevenantPage","currentPage","authBearer","Accept","Content-Type","X-Requested-With","success","ajaxOptions","thrownError","callback","pageLocation","method","forEach","item","field_xpath","includes","field_new_content","err","addCSS","rel","href","appendTo","addCKEditor","dataType","ckEditorConfigure","plugins","addExternal","disableAutoInline","dtd","$editable","address","article","aside","blockquote","details","div","fieldset","figcaption","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","main","nav","p","pre","section","timestamp","random","toString","spinnerLoad","$spinnerDiv","append","target","getElementById"],"mappings":"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","file":"../revenant.min.js","sourcesContent":["// http://spin.js.org/#v2.3.2\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});\n","\n//pageControllerModule is responsible for attaching extra views, editor classes, data categories, and adds event handlers to pageevent handlers to page. Is initialized as a callback in pageModule.init, and fires different behavior depending on if user is logged in or not.\nvar pageControllerModule = (function($){\n  var pageController = {};\n\n  //adds ckedittor inline and inline save handlers to editor instances.\n  pageController.editHandler = function () {\n\n    //data saved on text node with jQuery, needed to send to D8\n    var data = $(this).data('complete-path');\n\n    //needed parameters for author and authorization sent to D8\n    data.username = JSON.parse(sessionStorage.getItem('rev_auth')).username;\n    var authToken = JSON.parse(sessionStorage.getItem('rev_auth')).access_token;\n\n    //specific element selected by data-category attribute to initialize ckeditor with\n    var el = document.querySelector('[data-category=\"' + $(this).attr('data-category') + '\"');\n\n    //make sure editor instance does not exist already by setting unique xpath attribute for check\n    if (!el.hasAttribute('id', data.xpath)) {\n      el.setAttribute('id', data.xpath);\n\n      //configure ckeditor instance\n      CKEDITOR.config.inlinesave = {\n        postUrl: DEV_CONFIG + 'revenant_page/page_content',\n        postAuth: 'Bearer ' + authToken, //custom config set by KW in inline save plugin, is and xhr authorization header.\n        postData: {data: data},\n        useJson: true,\n        onSave: function (editor) {\n          //destory ckeditor instance and remove contenteditable attribute\n          editor.destroy();\n          el.removeAttribute('contenteditable');\n          return true;\n        },\n        onSuccess: function (editor, data) {\n          console.log('save successful', editor, data);\n        },\n        onFailure: function (editor, status, request) {\n          console.log('save failed', editor, status, request);\n        },\n        useJSON: true,\n        useColorIcon: false\n      };\n\n      // ckeditor simpleupload images add authorization header.\n      CKEDITOR.on('instanceReady', function(e) {\n          e.editor.on( 'simpleuploads.startUpload' , function(ev) {\n              var extraHeaders = {\n                  'Authorization': 'Bearer ' + authToken\n              };\n              ev.data.extraHeaders = extraHeaders;\n          });\n      });\n\n      //ckeditor instantiation happens here, when passing element into method, toolbar configuration also needs to happen here.\n      var editor = CKEDITOR.inline(el, {\n        bodyId: data,\n        extraPlugins: 'inlinesave,simpleuploads',\n        postAuth: 'Bearer ' + authToken, //custom config set by KW in simpleuploads plugin, is and xhr authorization header.\n        filebrowserImageUploadUrl: DEV_CONFIG + 'revenant_page/page_content/image',\n        postAuth: 'Bearer ' + authToken,\n        allowedContent: true,\n        toolbarGroups : [\n          { name: 'clipboard', groups: [ 'clipboard', 'undo' ] },\n          { name: 'editing', groups: [ 'find', 'selection', 'spellchecker', 'editing' ] },\n          { name: 'links', groups: [ 'links' ] },\n          { name: 'forms', groups: [ 'forms' ] },\n          { name: 'tools', groups: [ 'tools' ] },\n          { name: 'others', groups: [ 'others' ] },\n          { name: 'insert', groups: [ 'insert' ] },\n          '/',\n          { name: 'document', groups: [ 'mode', 'document', 'doctools' ] },\n          { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },\n          { name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi', 'paragraph' ] },\n          { name: 'styles', groups: [ 'styles' ] },\n          { name: 'colors', groups: [ 'colors' ] },\n          { name: 'about', groups: [ 'about' ] }\n        ],\n        removeButtons : 'Image,Maximize,Table,Anchor,Indent,Outdent,Blockquote,Styles,Format,About'\n      });\n    }\n  };\n\n\n  //add controle handler to all text--edit class elements\n  pageController.editAddHandler = function () {\n    $('.text--edit').on('click', pageController.editHandler)\n  };\n\n  //login keyBind function, checks for keys pressed at once for showing revenant login.\n  pageController.loginKeyBind = function() {\n    var map = {}; // You could also use an array\n    onkeydown = onkeyup = function(e){\n      e = e || event; // to deal with IE\n      if (e.type === 'keydown') {\n          map[e.keyCode] = true\n      } else  if (e.type === 'keyup') {\n          map[e.keyCode] = false\n      }\n      if(map[17] && map[18] && map[82]) { // COMMAND + OPT + R\n       if($('.rev_login').css('display') === 'none') {\n         $('.rev_login').fadeIn();\n       } else {\n         $('.rev_login').fadeOut();\n       }\n      }\n    }\n  };\n\n  //elements to skip in recurseAdd function, do not add edit class to these, only to their parent containers.\n  pageController.skipElements = ['SCRIPT','NOSCRIPT','B','SPAN','I','STRONG','EM','A'];\n\n  //recurse add function, checks for appropriate text nodes on page, adds editable attributes and data to page elements.\n  pageController.recurseAdd = function(element) {\n    if (element.childNodes.length > 0) {\n      for (var i = 0; i < element.childNodes.length; i++)\n        this.recurseAdd(element.childNodes[i]);\n    }\n    //TODO: add different check for recurse add, must add to anchor elements that are not within a content editable area.\n    if ((element.nodeType == Node.TEXT_NODE && element.nodeValue.trim() != '' && pageController.skipElements.indexOf(element.parentNode.nodeName) <= 0) && (element.parentNode.nodeName != 'A' &&  $(element).parents('.text--edit').length === 0)) {\n      //get completePath function returns all data needed to send to D8\n      var completePath = pageModule.getCompletePath(element);\n\n      //add edit class for blue border\n      element.parentNode.className += ' text--edit';\n\n      //add xpath data-category, which is use as selector for creating ckeditor instance\n      element.parentNode.setAttribute('data-category', completePath.xpath);\n\n      //set completePath data using jQuery data method. Retrieved later on editor initialize to send to D8\n      $('[data-category=\"' + completePath.xpath + '\"]').data('complete-path', completePath);\n\n      //set content editable attribute for ckeditor\n      element.parentNode.setAttribute('contenteditable', 'true');\n\n      //set to prevent actions on anchor clicks, TODO: get working for stand alone anchors as well.\n      if (element.parentNode.nodeName === 'A') {\n        element.parentNode.onclick = function (e) {\n          e.preventDefault();\n        }\n      }\n    }\n  };\n\n  //recurse remove function, destroys ckeditor instances and removes attributes needed for editing/sending data\n  pageController.recurseRemove = function(element) {\n    if (element.childNodes.length > 0) {\n      for (var i = 0; i < element.childNodes.length; i++)\n        this.recurseRemove(element.childNodes[i]);\n    }\n    var completePath = pageModule.getCompletePath(element);\n    element.parentNode.classList.remove(\"text--edit\");\n    $('[data-category=\"' + completePath.xpath + '\"]').removeData('complete-path');\n    element.parentNode.removeAttribute('data-category');\n    element.parentNode.removeAttribute('contenteditable');\n    for (name in CKEDITOR.instances) {\n      CKEDITOR.instances[name].destroy(true);\n    }\n    if (element.parentNode.nodeName === 'A') {\n      element.parentNode.onclick = null;\n    }\n  };\n\n  // calls recurseAdd on body\n  pageController.addEditClass = function () {\n    var body = document.getElementsByTagName('body')[0];\n    pageController.recurseAdd(body);\n  };\n\n  // calls recurseRemove on body\n  pageController.removeEditClass = function () {\n    var body = document.getElementsByTagName('body')[0];\n    pageController.recurseRemove(body);\n  };\n\n\n  //appends login and and event handler for hiding/showing and authenticating.\n  pageController.appendLogin = function () {\n    (function () {\n      //TODO??: use ajax and handlebars templats! Would be so much nicer, was working initially but then CORS :(\n      var LoginTemplate = $('<div class=\"rev_login\" style=\"display: none;\"><button class=\"rev_login_reveal\">Revenant</button><div class=\"rev_login__contaier\"><h2>Revenant Login</h2><form class=\"rev_login__form\" method=\"post\" action=\"submit.data\"> <input type=\"text\" title=\"username\" placeholder=\"username\" /><input type=\"password\" title=\"password\" placeholder=\"password\" /><button type=\"submit\" class=\"btn\">Login</button><a class=\"forgot\" href=\"#\">Forgot Username?</a></form></div></div>');\n      //TODO??: use template functionality here ???\n      // templateModule.getCompiledTemplate('login')\n      //     .then(function (html) {\n      $('body').prepend(LoginTemplate);\n\n      $('.rev_login_reveal').on('click', function () {\n        $('.rev_login__contaier').toggleClass('show');\n        pageController.loginAuthenticate();\n      });\n      // });\n    }());\n  };\n\n  //appends control panel for user and passes session variable with username to .hbs template\n  pageController.appendControlPanel = function () {\n    var UserControlPanelTemplate = function (username) {\n      return $('<div class=\"rev_user_control_panel\"><h4 class=\"rev_user\">Currently Logged in as: ' + username + '</h4><button class=\"rev_logout\">Logout of Revenant</button></div>')\n    };\n    //TODO??: readd template functionality here as well ???\n    // templateModule.getCompiledTemplate('user_control_panel')\n    //     .then(function (html) {\n    var rev_auth = JSON.parse(sessionStorage.getItem('rev_auth'));\n    var UserControlPanel = UserControlPanelTemplate(rev_auth.username);\n    $('body').prepend(UserControlPanel);\n\n    //logout handler, unbind and bind handler to avoid repetition\n    $('.rev_logout').off('click').on('click', function () {\n      pageController.logoutRequest().then(function(data) {\n        console.log('rev logout', data);\n          $('.rev_user_control_panel').remove();\n\n          //remove all edit handlers from text--edit elements\n          $('.text--edit').unbind('click', pageController.editHandler);\n\n          //remove all edit classes\n          pageController.removeEditClass();\n\n          //clear session storage of tokens\n          sessionStorage.clear();\n\n          //append login and bind keydown keyup\n          pageController.appendLogin();\n          pageController.loginKeyBind();\n      });\n    });\n    // });\n  };\n\n\n  //authenticates using D8 simple_oauth module parameters. Stores session var with tokens and username, removes login and calls functions for adding edit class and control panel.\n  pageController.loginAuthenticate = function () {\n\n    //remove submit handler before applying again.\n    $('.rev_login__form').off('submit').on('submit', function (e) {\n      e.preventDefault();\n\n      //credentials needed for authorization\n      var username = $(this).find('input[title=\"username\"]').val(),\n        password = $(this).find('input[title=\"password\"]').val(),\n        origin = window.location.host;\n      var auth_data = {\n        \"origin\": origin,\n        \"username\": username,\n        \"password\": password\n      };\n\n      //post to authorization endpoint\n      $.post( DEV_CONFIG + \"revenant_page/page_auth\", JSON.stringify(auth_data))\n        .error(function (error) {\n          console.log('oauth error', error)\n        })\n        .done(function (response, status, xhr) {\n          console.log(response, status, xhr);\n          var response_data = JSON.parse(response);\n          sessionStorage.setItem('rev_auth', JSON.stringify({\n            \"username\": username,\n            \"access_token\": response_data.access_token,\n            \"refresh_token\": response_data.refresh_token\n          }));\n          //since authentication is needed to create revenant page entity reference, must check for content to initialize page in D8 and initialize controllers again\n          pageModule.revenantContentCheck(pageController.init);\n\n          //remove login\n          $('.rev_login').remove();\n        });\n    })\n  };\n\n  //request handler for logging out drupal user\n    pageController.logoutRequest = function () {\n      var username = JSON.parse(sessionStorage.getItem('rev_auth')).username,\n      authToken = JSON.parse(sessionStorage.getItem('rev_auth')).access_token;\n      return $.ajax({\n        url: DEV_CONFIG + 'revenant_page/page_logout',\n        type: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' +  authToken\n        },\n        data: JSON.stringify({'username': username})\n      });\n    };\n\n  //pageController module initializer, checks for authorized user session token and adds login or control panel on page load. Adds edit class if user is authenticated.\n  pageController.init = function () {\n    console.log('pageControllerInit, add login or handlers');\n    if (!sessionStorage.getItem('rev_auth')) {\n      console.log('no rev-auth');\n      pageController.appendLogin();\n      pageController.loginKeyBind();\n    } else {\n      pageController.addEditClass();\n      pageController.editAddHandler();\n      pageController.appendControlPanel();\n    }\n    $('#spinner-overlay').fadeOut();\n  };\n\n  //exports page initializer for use in pageModule\n  return {\n    init : pageController.init\n  }\n\n})(jQuery);\n","\n//SET DEV ENVIRONMENT IN STRING FOR LOCAL OR REMOTE URL\n//TODO: need to configure local hosting CORS, for now leave as PROD\nvar DEV_CONFIGS = {\n  LOCAL: 'http://revenant-api.dev/',\n  PROD: 'http://revenant-api.bfdig.com/'\n};\n\nvar DEV_CONFIG = DEV_CONFIGS.PROD;\n\n\n//pageModule is responsible for rendering page display, makes checks for content and updates page text nodes, also adds needed scripts and configuration\nvar pageModule = (function ($) {\n\n  var page = {};\n\n  //gets text from element\n  page.getText = function (e) {\n    var text = e.parentNode.textContent;\n    return text;\n  };\n\n  //gets the element by xpath\n  page.getElementByXpath = function (path) {\n    return document.evaluate(path, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  };\n\n  //gets the xpath to an element\n  page.getXPath = function (element) {\n    var xpath = '';\n    //  loop walks up dom tree for all nodes\n    for (; element && element.nodeType == 1; element = element.parentNode) {\n      // gets the element node index for each element\n      var id = $(element.parentNode).children(element.tagName).index(element) + 1;\n      // if greateer than one puts in brackets\n      id > 1 ? (id = '[' + id + ']') : (id = '');\n      // prepends to the element tagname and id to the xpath\n      xpath = '/' + element.tagName.toLowerCase() + id + xpath;\n    }\n    return xpath;\n  };\n\n  //method for constructing revenant content item data model. All of the data that D8 needs to construct node.\n  page.getCompletePath = function (e) {\n    var url = window.location.hostname + window.location.pathname;\n    var xpath = page.getXPath(e.parentNode);\n    var title = document.title;\n    var oldText = e.parentElement.innerHTML;\n    var completePath = {\n      url: url,\n      xpath: xpath,\n      title: title,\n      oldText: oldText\n    };\n    return completePath;\n  };\n\n  //helper function for posting to rev-api, creates page and default content item.\n  page.createRevenantPage = function (currentPage) {\n    console.log('inside create page, current revenant', currentPage);\n    var authBearer = 'Bearer ' + JSON.parse(sessionStorage.getItem('rev_auth')).access_token;\n    $.ajax({\n      type: 'POST',\n      url: DEV_CONFIG + 'revenant_page/page_create',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/hal+json',\n        'Authorization': authBearer,\n        'X-Requested-With': null\n      },\n      data: JSON.stringify(currentPage),\n      success: function (data, status, xhr) {\n        console.log('revenant create page post success', data)\n      },\n      error: function (xhr, ajaxOptions, thrownError) {\n        console.log(\"revenant create page post xhr: \", xhr);\n        console.log(\"revenant create page post xhr: \", thrownError);\n      }\n    });\n  };\n\n  ///check for revenant content for current page, appends all content and invokes pageController callback.\n  page.revenantContentCheck = function (callback) {\n    $(function () {\n      const pageLocation = window.location.hostname + window.location.pathname;\n      $.ajax({\n        method: 'GET',\n        url: DEV_CONFIG + 'rev-content/?url=' + pageLocation,\n        success: function (data) {\n          console.log('revenant content check success', data);\n          //if no revenant nodes are sent and the user is logged in, send current revenant data to be created as revenant page entity reference\n          if (!data.length && sessionStorage.getItem('rev_auth')) {\n            var currentPage = {};\n            currentPage.title = window.location.hostname + window.location.pathname;\n            currentPage.url = pageLocation;\n            page.createRevenantPage(currentPage);\n          }\n\n          // if data is received replace all corresponding text nodes with new text using saved xpath.\n          else {\n            data.forEach(function (item) {\n              //excludes default content item.\n              if (!item || item.field_xpath.includes('default')) {\n                return\n              }\n              var editedNode = page.getElementByXpath(item.field_xpath);\n              editedNode.innerHTML = item.field_new_content;\n            })\n          }\n          if (callback) {\n            callback();\n          }\n        },\n        error: function (err) {\n          console.log(\"revenant content check error: \", err);\n        }\n      });\n    })\n  };\n\n  //prepends styling scripts to page\n  page.addCSS = function () {\n    $(\"<link/>\", {\n      rel: \"stylesheet\",\n      type: \"text/css\",\n      href: DEV_CONFIG + \"/revenant/src/css/main.css\"\n    }).appendTo(\"head\");\n  };\n\n  //loads ckeditor via ajax.\n  page.addCKEditor = function () {\n    return $.ajax({\n      url: DEV_CONFIG + 'revenant/lib/ckeditor/ckeditor.js',\n      dataType: 'script',\n      // cache: true\n    });\n  };\n\n\n  //configures ckeditor\n  page.ckEditorConfigure = function () {\n    //ckeditor inline save plugin configuration.\n    CKEDITOR.plugins.addExternal('inlinesave', DEV_CONFIG + 'revenant/lib/ckeditor/plugins/rev-inlinesave/', 'plugin.js');\n    CKEDITOR.disableAutoInline = true;\n    CKEDITOR.dtd.$editable = {\n      a: 1,\n      address: 1,\n      article: 1,\n      aside: 1,\n      blockquote: 1,\n      body: 1,\n      details: 1,\n      div: 1,\n      fieldset: 1,\n      figcaption: 1,\n      footer: 1,\n      form: 1,\n      h1: 1,\n      h2: 1,\n      h3: 1,\n      h4: 1,\n      h5: 1,\n      h6: 1,\n      header: 1,\n      hgroup: 1,\n      main: 1,\n      nav: 1,\n      p: 1,\n      pre: 1,\n      section: 1\n    };\n\n    //uncomment and run for clearing ckeditor cache and allowing modification of plugins. Used when modifying inline save plugin.\n    CKEDITOR.timestamp = Math.random().toString(36).substring( 0, 5 );\n  };\n\n  //spin js loading gif function, used during content check and insertion\n  page.spinnerLoad = function () {\n    $spinnerDiv = $('<div id=\"spinner-overlay\" style=\"position: fixed; height: 100%; z-index: 9999; top: 0;bottom: 0;left: 0;right: 0;opacity: .9;background-color: #fff;\"><div id=\"loading-spinner\"><div></div>');\n    $('body').append($spinnerDiv);\n\n    var opts = {\n      lines: 13 // The number of lines to draw\n      , length: 28 // The length of each line\n      , width: 14 // The line thickness\n      , radius: 42 // The radius of the inner circle\n      , scale: 1 // Scales overall size of the spinner\n      , corners: 1 // Corner roundness (0..1)\n      , color: '#000' // #rgb or #rrggbb or array of colors\n      , opacity: 0.25 // Opacity of the lines\n      , rotate: 0 // The rotation offset\n      , direction: 1 // 1: clockwise, -1: counterclockwise\n      , speed: 1 // Rounds per second\n      , trail: 60 // Afterglow percentage\n      , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n      , zIndex: 2e9 // The z-index (defaults to 2000000000)\n      , className: 'spinner' // The CSS class to assign to the spinner\n      , top: '50%' // Top position relative to parent\n      , left: '50%' // Left position relative to parent\n      , shadow: false // Whether to render a shadow\n      , hwaccel: false // Whether to use hardware acceleration\n      , position: 'absolute' // Element positioning\n    };\n    var target = document.getElementById('loading-spinner')\n    var spinner = new Spinner(opts).spin(target);\n  }\n\n\n  //initializes pageModule, check for content and passes in pageController as callback\n  page.init = function (callback) {\n    page.spinnerLoad();\n    page.addCKEditor().done(function () {\n      page.addCSS();\n        page.ckEditorConfigure();\n        page.revenantContentCheck(callback);\n    });\n  };\n\n  //export other needed functions that pageController will use.\n  return {\n    revenantContentCheck: page.revenantContentCheck,\n    getCompletePath: page.getCompletePath,\n    init: page.init,\n  }\n\n})(jQuery);\n\n//THIS IS WHAT STARTS EVERYTHING :)\npageModule.init(pageControllerModule.init);\n"]}